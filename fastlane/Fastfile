# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    # increment_build_number(xcodeproj: "CodeMagicDemo.xcodeproj")
    # build_app(workspace: "CodeMagicDemo.xcworkspace", scheme: "CodeMagicDemo")
    # upload_to_testflight
    api_key = app_store_connect_api_key(
      key_id: ENV['AK_KEY_ID'],
      issuer_id: ENV['AK_ISSUER_ID'],
      key_content: ENV['AK_CONNECT_KEY'],
      in_house: false,
    )

    match(type: "appstore",
      readonly: true,
      app_identifier: "net.artkernel.CodeMagicDemo2",
      profile_name: "*** AppStore net.artkernel.CodeMagicDemo2",
      keychain_name: ENV['AK_KEYCHAIN_NAME'],
      keychain_password: ENV['AK_KEYCHAIN_PASS'],
      git_url: ENV['AK_MATCH_GIT_REPO'])

    build_num = app_store_build_number(
      app_identifier: "net.artkernel.CodeMagicDemo2",
      live: false,
      api_key: api_key
    )

    increment_build_number(
      build_number: build_num + 1
    )

    gym(workspace: "CodeMagicDemo.xcworkspace",
      scheme: "CodeMagicDemo",
      export_method: "app-store",
      clean: true,
      include_symbols: true,
      include_bitcode: true,
      output_directory: "./fastlane/ipa/TestFlight",
      output_name: "CodeMagicDemo.ipa")

    pilot(
      api_key: api_key,
      app_identifier: "net.artkernel.CodeMagicDemo2",
      changelog: "release to TestFlight",
      ipa: "./fastlane/ipa/TestFlight/CodeMagicDemo.ipa"
      )
  end

  desc "Push a new beta build to TestFlight"
  lane :backup do
    # increment_build_number(xcodeproj: "CodeMagicDemo.xcodeproj")
    # build_app(workspace: "CodeMagicDemo.xcworkspace", scheme: "CodeMagicDemo")
    # upload_to_testflight
    app_store_connect_api_key(
      key_id: ENV['AK_KEY_ID'],
      issuer_id: ENV['AK_ISSUER_ID'],
      key_content: ENV['AK_CONNECT_KEY'],
      in_house: false,
    )

    sync_code_signing(
      type: 'appstore',
      app_identifier: 'net.artkernel.CodeMagicDemo2',
      readonly: true,
      keychain_name: ENV['AK_KEYCHAIN_NAME'],
      keychain_password: ENV['AK_KEYCHAIN_PASS'],
      force_for_new_devices: false,
      force: false,
      verbose: true,
    )

    set_info_plist_value(
      path: './CodeMagicDemo.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist',
      key: "CFBundleShortVersionString",
      value: 1.0
    )

    set_info_plist_value(
      path: './CodeMagicDemo.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist',
      key: "CFBundleVersion",
      value: 7
    )

    build_app(
      workspace: 'CodeMagicDemo.xcworkspace',
      configuration: 'Staging',
      scheme: 'CodeMagicDemo',
      silent: true,
      clean: true,
      export_method: 'appstore',
      export_options: {
       signingCertificate: ENV['AK_DISTRIBUTION_CERT'],
       provisioningProfiles: {
         "net.artkernel.CodeMagicDemo2" => 'sigh_net.artkernel.CodeMagicDemo2_appstore_profile-name',
         # add provision profile for app extension
       }
      },
      output_directory: 'build',
      output_name: 'CodeMagicDemo.ipa',
      build_path: 'build',
      archive_path: 'build/CodeMagicDemo.xcarchive',
      buildlog_path: 'build/log',
      derived_data_path: 'build/DerivedData',
      include_bitcode: false,
      include_symbols: true,
      skip_profile_detection: true,
      xcargs: "-allowProvisioningUpdates",
    )
  end
end
